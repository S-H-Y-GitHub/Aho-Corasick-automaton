print("╔════════════════════════════════════════════╗")
print("║                                 AC自动机算法的简单实现                                 ║")
print("║                                                                                        ║")
print("║                                                                           作者：率怀一 ║")
print("║                                                                          2016年9月27日 ║")
print("╚════════════════════════════════════════════╝")
#由用户输入必须的参数
模式集 = set()
while True:
	print("请逐个输入模式串，输入\'#\'结束：", end = '')   #程序运行时此处不会出错，但是VS调试时会乱码，所以只好这样解决
	输入 = input()
	if 输入 == '#':
		break
	模式集.add(输入)
print("请输入目标字符串：", end = '')                      #原因同上↑
目标 = input()

#生成转向函数和输出函数
#转向函数格式:{当前状态:{输入数据1:下一状态1, 输入数据2:下一状态2, ...}, ...}
#输出函数格式:{状态:{输出1，输出2，...}, ...}
转向表, 输出表 = dict(), dict()
下一状态 = 0
for 模式 in 模式集:
	当前状态 = 0
	for 字符 in 模式:
		if 当前状态 in 转向表:
			if 字符 in 转向表[当前状态]:
				当前状态 = 转向表[当前状态][字符]
			else:
				下一状态 += 1
				转向表[当前状态][字符] = 下一状态
				当前状态 = 下一状态
		else:
			下一状态 += 1
			转向表[当前状态] = {字符:下一状态}
			当前状态 = 下一状态
	输出表[当前状态] = {模式}
#生成失效函数,完善输出函数
#初始化
失效表 = {0:0}
上层状态 = []
for 当前状态 in 转向表[0].values():
	失效表[当前状态] = 0
	上层状态.append(当前状态)
#循环构建失效函数
while len(上层状态) > 0:
	temp = []
	for 上一状态 in 上层状态:
		if 上一状态 in 转向表:
			for 当前状态组 in 转向表[上一状态].items():		#此处的当前状态组是一个元组(字符, 状态)
				字符 = 当前状态组[0]
				当前状态 = 当前状态组[1]
				上一状态的失效状态 = 失效表[上一状态]
				if 字符 in 转向表[上一状态的失效状态]:
					失效表[当前状态] = 转向表[上一状态的失效状态][字符]
					if 失效表[当前状态] in 输出表:
						输出表[当前状态] |= 输出表[失效表[当前状态]]
				else:
					失效表[当前状态] = 0
				temp.append(当前状态)
	上层状态 = temp
#处理目标串
当前状态 = 0
i, j = 0, 1
print("******************************************匹配结果*****************************************")
print("目标串：\t", 目标)
for 字符 in 目标:
	i += 1
	while 当前状态 != 0:
		if (当前状态 in 转向表) and (字符 in 转向表[当前状态]):
			当前状态 = 转向表[当前状态][字符]
			if 当前状态 in 输出表:
				for 模式 in 输出表[当前状态]:
					print("结果 ", j, "：\t", 模式.rjust(i))
					j += 1
				当前状态 = 失效表[当前状态]
			break
		else:
			当前状态 = 失效表[当前状态]
	else:
		if (当前状态 in 转向表) and (字符 in 转向表[当前状态]):
			当前状态 = 转向表[当前状态][字符]
			if 当前状态 in 输出表:
				for 模式 in 输出表[当前状态]:
					print("结果", j, "：\t", 模式.rjust(i))
					j += 1
				当前状态 = 失效表[当前状态]
		else:
			当前状态 = 失效表[当前状态]
if j == 1:
	print("没有结果！！")
